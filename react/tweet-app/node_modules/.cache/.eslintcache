[{"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\index.tsx":"1","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\App.tsx":"2","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\router\\Router.tsx":"3","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\router\\HomeRouter.tsx":"4","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\provider\\LoginUserProvider.tsx":"5","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Login.tsx":"6","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\templates\\HeaderLayout.tsx":"7","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Setting.tsx":"8","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Home.tsx":"9","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Tweet.tsx":"10","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useLoginUser.tsx":"11","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\SignupModal.tsx":"12","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\organisms\\Header.tsx":"13","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useMessage.tsx":"14","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useCurrentLoginUser.tsx":"15","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\ImageUploadModal.tsx":"16","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useEditUserAccount.tsx":"17","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\MyTweetModal.tsx":"18","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useUpdateTweet.tsx":"19","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useInsertTweet.tsx":"20","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useProfileImage.tsx":"21","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useFollow.tsx":"22","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useDeleteTweet.tsx":"23","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useGetMyTweets.tsx":"24","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useTweetLike.tsx":"25","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useTweetComment.tsx":"26","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useGetAllTweets.tsx":"27","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\AllTweetModal.tsx":"28","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\ProfileImage.tsx":"29","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\LikeButton.tsx":"30","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\MenuDrawer.tsx":"31","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useCreateUser.tsx":"32","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\MenuIconButton.tsx":"33","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\FollowButton.tsx":"34","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useJadge.tsx":"35"},{"size":410,"mtime":1635057590666,"results":"36","hashOfConfig":"37"},{"size":332,"mtime":1635057886929,"results":"38","hashOfConfig":"37"},{"size":1081,"mtime":1636891713795,"results":"39","hashOfConfig":"37"},{"size":462,"mtime":1635081168910,"results":"40","hashOfConfig":"37"},{"size":684,"mtime":1635062438732,"results":"41","hashOfConfig":"37"},{"size":3613,"mtime":1637494848173,"results":"42","hashOfConfig":"37"},{"size":616,"mtime":1635074099992,"results":"43","hashOfConfig":"37"},{"size":8119,"mtime":1637658867903,"results":"44","hashOfConfig":"37"},{"size":5321,"mtime":1637495213509,"results":"45","hashOfConfig":"37"},{"size":4449,"mtime":1637408861680,"results":"46","hashOfConfig":"37"},{"size":2023,"mtime":1639144177624,"results":"47","hashOfConfig":"37"},{"size":4383,"mtime":1637494859664,"results":"48","hashOfConfig":"37"},{"size":3100,"mtime":1636988288440,"results":"49","hashOfConfig":"37"},{"size":484,"mtime":1637410226890,"results":"50","hashOfConfig":"37"},{"size":220,"mtime":1635062111632,"results":"51","hashOfConfig":"37"},{"size":2403,"mtime":1637648536278,"results":"52","hashOfConfig":"37"},{"size":1450,"mtime":1639143860689,"results":"53","hashOfConfig":"37"},{"size":4849,"mtime":1637658833746,"results":"54","hashOfConfig":"37"},{"size":987,"mtime":1639144082460,"results":"55","hashOfConfig":"37"},{"size":1044,"mtime":1639143976166,"results":"56","hashOfConfig":"37"},{"size":1701,"mtime":1639144029995,"results":"57","hashOfConfig":"37"},{"size":2183,"mtime":1639143949974,"results":"58","hashOfConfig":"37"},{"size":956,"mtime":1639143833858,"results":"59","hashOfConfig":"37"},{"size":857,"mtime":1639143927173,"results":"60","hashOfConfig":"37"},{"size":1500,"mtime":1639144071018,"results":"61","hashOfConfig":"37"},{"size":1025,"mtime":1639144045985,"results":"62","hashOfConfig":"37"},{"size":958,"mtime":1639143935437,"results":"63","hashOfConfig":"37"},{"size":6821,"mtime":1637658854282,"results":"64","hashOfConfig":"37"},{"size":741,"mtime":1637411066237,"results":"65","hashOfConfig":"37"},{"size":883,"mtime":1636986069663,"results":"66","hashOfConfig":"37"},{"size":2425,"mtime":1636888983216,"results":"67","hashOfConfig":"37"},{"size":908,"mtime":1639143811378,"results":"68","hashOfConfig":"37"},{"size":402,"mtime":1635069297784,"results":"69","hashOfConfig":"37"},{"size":1441,"mtime":1636986063366,"results":"70","hashOfConfig":"37"},{"size":1087,"mtime":1636888127811,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1cvhbsr",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\index.tsx",[],["146","147"],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\App.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\router\\Router.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\router\\HomeRouter.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\provider\\LoginUserProvider.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Login.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\templates\\HeaderLayout.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Setting.tsx",["148"],"import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Flex, Heading, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/tabs\";\r\nimport { useEffect, VFC } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { useEditUserAccount } from \"../../hooks/useEditUserAccount\";\r\nimport { useFollow } from \"../../hooks/useFollow\";\r\nimport { useMessage } from \"../../hooks/useMessage\";\r\nimport { ProfileImage } from \"../atoms/ProfileImage\";\r\nimport { ImageUploadModal } from \"../molecules/ImageUploadModal\";\r\n\r\ninterface IFormInput {\r\n    password: string;\r\n    username: string;\r\n};\r\n\r\nexport const Setting: VFC = () => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const history = useHistory();\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const {editUserAccount} = useEditUserAccount();\r\n    const {getMyFollow} = useFollow();\r\n    const {showMessage} = useMessage();\r\n    const {register, reset, formState: { errors }, handleSubmit} = useForm<IFormInput>();\r\n    const onSubmit: SubmitHandler<IFormInput> = (data) => {\r\n        if(data.password === \"\" && data.username === \"\"){\r\n            showMessage({title: \"パスワードまたはユーザー名を入力してください\", status: \"error\"});\r\n        }else{\r\n            editUserAccount(data.password, data.username);\r\n            reset();\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(loginUser.token === undefined){\r\n            history.push(\"/\");\r\n        };\r\n        getMyFollow();\r\n    }, [history, loginUser.token]);\r\n\r\n    return (\r\n        <>\r\n            <Box backgroundColor=\"teal.600\" display={{base: \"none\", sm: \"block\"}} position=\"fixed\" w=\"100%\">\r\n                <Box ml={2}>\r\n                    <Heading fontSize=\"3xl\" color=\"whiteAlpha.800\" p={2}>Setting</Heading>\r\n                </Box>\r\n            </Box>\r\n            <Box ml={{base: \"4\", sm: \"64\"}} mt={{base: \"6\", sm: \"24\"}} w={{base: \"90%\", md: \"50%\"}}>\r\n                <Flex display={{base: \"none\", sm: \"flex\"}}>\r\n                    <Box>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Stack spacing={1}>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">E-Mail</Text>\r\n                                    <Input readOnly value={loginUser.email}/>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">Password</Text>\r\n                                    <Input type=\"password\" placeholder=\"Password\" {...register(\"password\", {maxLength: 20})}/>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red\">{errors.password?.type === \"maxLength\" && \"20文字以内で入力してください\"}</Text>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">Username</Text>\r\n                                    <Input placeholder=\"Username\" {...register(\"username\", {maxLength: 20})}/>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red\">{errors.username?.type === \"maxLength\" && \"20文字以内で入力してください\"}</Text>\r\n                                </Box>\r\n                            </Stack>\r\n                            <Box mt={4}>\r\n                                <Input type=\"submit\" backgroundColor=\"gray.400\" fontWeight=\"bold\" _hover={{opacity: \"0.7\"}} value=\"変更\"/>\r\n                            </Box>\r\n                        </form>\r\n                    </Box>\r\n                    <Box textAlign=\"center\" mt={4} ml={10}>\r\n                        <ProfileImage size={\"150px\"} image={loginUser.profileImage}/>\r\n                        <Button backgroundColor=\"gray.300\" mt={6} _hover={{opacity: \"0.8\"}} onClick={onOpen}>変更</Button>\r\n                    </Box>\r\n                </Flex>\r\n                <Box display={{base: \"block\", sm: \"none\"}}>\r\n                    <Box mt={4} textAlign=\"center\">\r\n                        <Box>\r\n                            <Box display=\"inline-block\" mx=\"auto\">\r\n                                <ProfileImage size={\"150px\"} image={loginUser.profileImage}/>\r\n                            </Box>\r\n                        </Box>\r\n                        <Button backgroundColor=\"whiteAlpha.900\" mt={6} _hover={{opacity: \"0.8\"}} onClick={onOpen}>変更</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Stack spacing={1}>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">E-Mail</Text>\r\n                                    <Input readOnly value={loginUser.email}/>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">Password</Text>\r\n                                    <Input type=\"password\" placeholder=\"Password\" {...register(\"password\", {maxLength: 20})}/>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red\">{errors.password?.type === \"maxLength\" && \"20文字以内で入力してください\"}</Text>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Text fontWeight=\"bold\">Username</Text>\r\n                                    <Input placeholder=\"Username\" {...register(\"username\", {maxLength: 20})}/>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red\">{errors.username?.type === \"maxLength\" && \"20文字以内で入力してください\"}</Text>\r\n                                </Box>\r\n                            </Stack>\r\n                            <Box mt={4}>\r\n                                <Input type=\"submit\" backgroundColor=\"gray.400\" fontWeight=\"bold\" _hover={{opacity: \"0.7\"}} value=\"変更\"/>\r\n                            </Box>\r\n                        </form>\r\n                    </Box>\r\n                </Box>\r\n                <Box mt={12}>\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>フォロー</Tab>\r\n                            <Tab>フォロワー</Tab>\r\n                        </TabList>\r\n                        <TabPanels>\r\n                            <TabPanel>\r\n                                <Stack spacing={4}>\r\n                                    {loginUser.follow?.map((follow) => (\r\n                                        <Flex key={follow.id as number}>\r\n                                            <ProfileImage size={\"40px\"} image={follow.profileImage}/>\r\n                                            <Text fontWeight=\"bold\" ml={2}>{follow.followusername}</Text>\r\n                                        </Flex>\r\n                                    ))}\r\n                                </Stack>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <Stack spacing={4}>\r\n                                    {loginUser.follower?.map((follower) => (\r\n                                        <Flex key={follower.id as number}>\r\n                                            <ProfileImage size={\"40px\"} image={follower.profileImage}/>\r\n                                            <Text fontWeight=\"bold\" ml={2}>{follower.followerusername}</Text>\r\n                                        </Flex>\r\n                                    ))}\r\n                                </Stack>\r\n                            </TabPanel>\r\n                        </TabPanels>\r\n                    </Tabs>\r\n                </Box>\r\n            </Box>\r\n            <ImageUploadModal onClose={onClose} isOpen={isOpen}/>\r\n        </>\r\n    );\r\n};","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Home.tsx",["149"],"import { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Flex, Heading, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useEffect, useState, VFC } from \"react\";\r\nimport { useGetMyTweets } from \"../../hooks/useGetMyTweets\";\r\nimport { FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\r\nimport { useInsertTweet } from \"../../hooks/useInsertTweet\";\r\nimport { MyTweetModal } from \"../molecules/MyTweetModal\";\r\nimport { useDeleteTweet } from \"../../hooks/useDeleteTweet\";\r\nimport { useUpdateTweet } from \"../../hooks/useUpdateTweet\";\r\nimport { useFollow } from \"../../hooks/useFollow\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ProfileImage } from \"../atoms/ProfileImage\";\r\nimport { useProfileImage } from \"../../hooks/useProfileImage\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\ninterface IFormInput {\r\n    tweet: string;\r\n}\r\n\r\nexport const Home: VFC = () => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const history = useHistory();\r\n    const {myTweets, getMyTweets} = useGetMyTweets();\r\n    const [tweetId, setTweetId] = useState<Number>();\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const {insertTweetState, insertTweet} = useInsertTweet();\r\n    const {updateTweetState, updateTweet} = useUpdateTweet();\r\n    const {deleteTweetState, deleteTweet} = useDeleteTweet();\r\n    const {getMyFollow} = useFollow();\r\n    const {getProfileImage} = useProfileImage();\r\n    const {register, reset, formState: { errors }, handleSubmit} = useForm<IFormInput>();\r\n    const onSubmit: SubmitHandler<IFormInput> = (data) => {\r\n        insertTweet(data.tweet);\r\n        reset();\r\n    };\r\n\r\n    const onClickSendCount = (count?: Number) => {\r\n        setTweetId(count);\r\n        onOpen();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(loginUser.token === undefined){\r\n            history.push(\"/\");\r\n        };\r\n        getMyTweets();\r\n        getMyFollow();\r\n        getProfileImage();\r\n    }, [insertTweetState, updateTweetState, deleteTweetState]);\r\n\r\n    return (\r\n        <>\r\n            <Box backgroundColor=\"teal.600\" display={{base: \"none\", sm: \"block\"}} position=\"fixed\" w=\"100%\">\r\n                <Box ml={2}>\r\n                    <Heading fontSize=\"3xl\" p={2} color=\"whiteAlpha.800\">Home</Heading>\r\n                </Box>\r\n            </Box>\r\n            <Box ml={{sm: \"56\"}} mt={{base: \"6\", lg: \"24\"}}>\r\n                <Box w={{base: \"80%\", md: \"55%\", lg: \"40%\"}} mt={{base: \"12\", sm: \"24\"}} ml={{base: \"8\", sm: \"6\"}}>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Box>\r\n                            <Text fontSize=\"xs\" fontWeight=\"bold\" color=\"red\">{errors.tweet?.type === \"required\" && \"何か入力してください\"}</Text>\r\n                            <Text fontSize=\"xs\" fontWeight=\"bold\" color=\"red\">{errors.tweet?.type === \"maxLength\" && \"100文字以内で入力してください\"}</Text>\r\n                            <Input borderColor=\"gray.400\" border=\"2px\" {...register(\"tweet\", {required: true, maxLength: 100})}/>\r\n                        </Box>\r\n                        <Box mt={1} ml=\"auto\" w={{base: \"40%\", sm: \"35%\", md: \"27%\"}}>\r\n                            <Input type=\"submit\" borderRadius=\"full\" backgroundColor=\"teal.400\" color=\"whiteAlpha.800\" fontWeight=\"bold\" fontSize=\"md\" value=\"Tweet\"/>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n                <Box display=\"block\" ml={10} mt={14}>\r\n                    <Stack spacing={6}>\r\n                        {myTweets.map((myTweet) => (\r\n                            <Flex key={myTweet.id as number} _hover={{cursor: \"pointer\"}} onClick={() => onClickSendCount(myTweet.id)}>\r\n                                <Box>\r\n                                    <ProfileImage size={\"50px\"} image={loginUser.profileImage}/>\r\n                                </Box>\r\n                                <Box p={2} w={{base: \"80%\", sm: \"75%\", md: \"70%\", lg: \"50%\"}}>\r\n                                    <Text fontWeight=\"bold\">{myTweet.username}</Text>\r\n                                    <Text>{myTweet.time}</Text>\r\n                                    <Text mt={2} mb={4}>{myTweet.tweet}</Text>\r\n                                    <Flex>\r\n                                        <Flex align=\"center\">\r\n                                            <FaThumbsUp size={18}/>\r\n                                            <Text ml={2}>{myTweet.tweetLikeCount}</Text>\r\n                                        </Flex>\r\n                                        <Flex align=\"center\" ml={8}>\r\n                                            <FaRegCommentAlt size={18}/>\r\n                                            <Text ml={2}>{myTweet.tweetCommentCount}</Text>\r\n                                        </Flex>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Flex>\r\n                        ))}\r\n                    </Stack>\r\n                </Box>\r\n            </Box>\r\n\r\n            <MyTweetModal tweetId={tweetId} myTweets={myTweets} onClose={onClose} isOpen={isOpen} updateTweet={updateTweet} deleteTweet={deleteTweet}/>\r\n        </>\r\n    );\r\n};","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\pages\\Tweet.tsx",["150"],"import { Box, Flex, Heading, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useEffect, useState, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { useGetAllTweets } from \"../../hooks/useGetAllTweets\";\r\nimport { FaRegCommentAlt } from \"react-icons/fa\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { AllTweetModal } from \"../molecules/AllTweetModal\";\r\nimport { useTweetLike } from \"../../hooks/useTweetLike\";\r\nimport { useTweetComment } from \"../../hooks/useTweetComment\";\r\nimport { useFollow } from \"../../hooks/useFollow\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ProfileImage } from \"../atoms/ProfileImage\";\r\nimport { LikeButton } from \"../atoms/LikeButton\";\r\nimport { useProfileImage } from \"../../hooks/useProfileImage\";\r\n\r\nexport const Tweet: VFC = () => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const history = useHistory();\r\n    const {allTweets, getAllTweets} = useGetAllTweets();\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const {tweetLikeState, insertTweetLike, deleteTweetLike} = useTweetLike();\r\n    const {tweetCommentState, insertTweetComment} = useTweetComment();\r\n    const {changeFollowState, getMyFollow, insertFollow, deleteFollow} = useFollow();\r\n    const [tweetId, setTweetId] = useState<Number>();\r\n    const {getProfileImage} = useProfileImage();\r\n\r\n    const onClickSendCount = (tweetId?: Number) => {\r\n        setTweetId(tweetId);\r\n        onOpen();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(loginUser.token === undefined){\r\n            history.push(\"/\");\r\n        };\r\n        getAllTweets();\r\n        getMyFollow();\r\n        getProfileImage();\r\n    }, [tweetLikeState, tweetCommentState, changeFollowState, history, loginUser.token]);//followState, getAllTweets, getMyFollow\r\n\r\n    return (\r\n        <>\r\n            <Box backgroundColor=\"teal.600\" display={{base: \"none\", sm: \"block\"}} position=\"fixed\" w=\"100%\">\r\n                <Box ml={2}>\r\n                    <Heading fontSize=\"3xl\" color=\"whiteAlpha.800\" p={2}>Tweet</Heading>\r\n                </Box>\r\n            </Box>\r\n            <Box ml={{sm :\"56\"}}>\r\n                <Box ml={10} mt={{base: \"10\", sm: \"24\"}}>\r\n                    <Stack spacing={6}>\r\n                        {allTweets.map((allTweet) => (\r\n                            <Flex key={allTweet.id as number} _hover={{cursor: \"pointer\"}} onClick={() => onClickSendCount(allTweet.id)}>\r\n                                <Box>\r\n                                    <ProfileImage size={\"50px\"} image={allTweet.profileImage}/>\r\n                                </Box>\r\n                                <Box p={2} w={{base: \"80%\", sm: \"75%\", md: \"70%\", lg: \"50%\"}}>\r\n                                    <Text fontWeight=\"bold\">{allTweet.username}</Text>\r\n                                    <Text>{allTweet.time}</Text>\r\n                                    <Text mt={2} mb={4}>{allTweet.tweet}</Text>\r\n                                    <Flex>\r\n                                        <Flex align=\"center\">\r\n                                            <Box>\r\n                                                <LikeButton size={18} tweetLikeList={allTweet.tweetLikeList}/>\r\n                                            </Box>\r\n                                            <Text ml={2}>{allTweet.tweetLikeCount}</Text>\r\n                                        </Flex>\r\n                                        <Flex  align=\"center\" ml={8}>\r\n                                            <FaRegCommentAlt size={18}/>\r\n                                            <Text ml={2}>{allTweet.tweetCommentCount}</Text>\r\n                                        </Flex>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Flex>\r\n                        ))}\r\n                    </Stack>\r\n                </Box>\r\n            </Box>\r\n\r\n            <AllTweetModal\r\n                tweetId={tweetId}\r\n                allTweets={allTweets}\r\n                onClose={onClose}\r\n                isOpen={isOpen}\r\n                insertTweetLike={insertTweetLike}\r\n                deleteTweetLike={deleteTweetLike}\r\n                insertTweetComment={insertTweetComment}\r\n                insertFollow={insertFollow}\r\n                deleteFollow={deleteFollow}\r\n                changeFollowState={changeFollowState}\r\n            />\r\n        </>\r\n    );\r\n};","C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useLoginUser.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\SignupModal.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\organisms\\Header.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useMessage.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useCurrentLoginUser.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\ImageUploadModal.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useEditUserAccount.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\MyTweetModal.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useUpdateTweet.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useInsertTweet.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useProfileImage.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useFollow.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useDeleteTweet.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useGetMyTweets.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useTweetLike.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useTweetComment.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useGetAllTweets.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\AllTweetModal.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\ProfileImage.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\LikeButton.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\molecules\\MenuDrawer.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useCreateUser.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\MenuIconButton.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\components\\atoms\\FollowButton.tsx",[],"C:\\Users\\yuma\\Desktop\\dev\\フロント\\tweet-app\\src\\hooks\\useJadge.tsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":43,"column":8,"nodeType":"157","endLine":43,"endColumn":34,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":51,"column":8,"nodeType":"157","endLine":51,"endColumn":62,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":39,"column":8,"nodeType":"157","endLine":39,"endColumn":88,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyFollow'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has missing dependencies: 'getMyFollow', 'getMyTweets', 'getProfileImage', 'history', and 'loginUser.token'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'getAllTweets', 'getMyFollow', and 'getProfileImage'. Either include them or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [getMyFollow, history, loginUser.token]",{"range":"174","text":"175"},"Update the dependencies array to be: [insertTweetState, updateTweetState, deleteTweetState, loginUser.token, getMyTweets, getMyFollow, getProfileImage, history]",{"range":"176","text":"177"},"Update the dependencies array to be: [tweetLikeState, tweetCommentState, changeFollowState, history, loginUser.token, getAllTweets, getMyFollow, getProfileImage]",{"range":"178","text":"179"},[1738,1764],"[getMyFollow, history, loginUser.token]",[2061,2115],"[insertTweetState, updateTweetState, deleteTweetState, loginUser.token, getMyTweets, getMyFollow, getProfileImage, history]",[1696,1776],"[tweetLikeState, tweetCommentState, changeFollowState, history, loginUser.token, getAllTweets, getMyFollow, getProfileImage]"]