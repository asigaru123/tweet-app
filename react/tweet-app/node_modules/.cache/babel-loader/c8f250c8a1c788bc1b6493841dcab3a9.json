{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\molecules\\\\AllTweetModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Box, Flex, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { Textarea } from \"@chakra-ui/textarea\";\nimport { useEffect, useState } from \"react\";\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\nimport { ProfileImage } from \"../atoms/ProfileImage\";\nimport { useJadge } from \"../../hooks/useJadge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AllTweetModal = props => {\n  _s();\n\n  var _targetTweet$tweetCom, _targetTweet$tweetCom2;\n\n  const {\n    tweetId,\n    allTweets,\n    onClose,\n    isOpen,\n    insertTweetLike,\n    deleteTweetLike,\n    insertTweetComment,\n    insertFollow,\n    deleteFollow\n  } = props;\n  const [targetTweet, setTargetTweet] = useState();\n  const [comment, setComment] = useState(\"\");\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n  const {\n    isLike,\n    isFollow\n  } = useJadge();\n\n  const onClickLike = () => {\n    if (isLike()) {\n      deleteTweetLike(tweetId);\n    } else {\n      insertTweetLike(tweetId);\n    }\n\n    ;\n  };\n\n  const onChangeTweetComment = event => setComment(event.target.value);\n\n  const onClickTweetComment = () => {\n    insertTweetComment(tweetId, comment);\n    setComment(\"\");\n  };\n\n  const onClickFollow = () => {\n    if (isFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email)) {\n      deleteFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email);\n    } else {\n      insertFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email);\n    }\n  };\n\n  useEffect(() => {\n    const findTweet = allTweets.find(allTweet => tweetId === allTweet.id);\n    setTargetTweet(findTweet);\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mr: 2,\n                  children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                    size: \"60px\",\n                    image: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.profileImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    fontWeight: \"bold\",\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    my: 3,\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), isFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email) ? /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  fontSize: \"xs\",\n                  backgroundColor: \"gray.400\",\n                  borderRadius: \"full\",\n                  _hover: {\n                    opacity: \"0.7\"\n                  },\n                  onClick: onClickFollow,\n                  children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  fontSize: \"xs\",\n                  backgroundColor: \"blue.300\",\n                  borderRadius: \"full\",\n                  _hover: {\n                    opacity: \"0.7\"\n                  },\n                  onClick: onClickFollow,\n                  children: \"\\u30D5\\u30A9\\u30ED\\u30FC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              ml: 4,\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                _hover: {\n                  cursor: \"pointer\"\n                },\n                onClick: onClickLike,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: isLike(targetTweet) ? /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  ml: 2,\n                  children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweetLikeCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                ml: 10,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(FaRegCommentAlt, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  ml: 2,\n                  children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweetCommentCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              align: \"end\",\n              my: 6,\n              children: [/*#__PURE__*/_jsxDEV(Textarea, {\n                borderColor: \"gray.300\",\n                placeholder: \"\\u30B3\\u30E1\\u30F3\\u30C8\\u3059\\u308B\",\n                value: comment,\n                onChange: onChangeTweetComment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                backgroundColor: \"gray.400\",\n                ml: 2,\n                _hover: {\n                  opacity: \"0.7\"\n                },\n                disabled: comment === \"\",\n                onClick: onClickTweetComment,\n                children: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), (targetTweet === null || targetTweet === void 0 ? void 0 : (_targetTweet$tweetCom = targetTweet.tweetCommentResource) === null || _targetTweet$tweetCom === void 0 ? void 0 : _targetTweet$tweetCom.length) === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 4,\n              mt: 10,\n              mb: 2,\n              children: targetTweet === null || targetTweet === void 0 ? void 0 : (_targetTweet$tweetCom2 = targetTweet.tweetCommentResource) === null || _targetTweet$tweetCom2 === void 0 ? void 0 : _targetTweet$tweetCom2.map(commentResource => /*#__PURE__*/_jsxDEV(Flex, {\n                p: 1,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                    size: \"40px\",\n                    image: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.profileImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"md\",\n                    fontWeight: \"bold\",\n                    children: commentResource.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    children: commentResource.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"md\",\n                    children: commentResource.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllTweetModal, \"Z4heIuVucnT/FuGhTOq0pWnJoi4=\", false, function () {\n  return [useCurrentLoginUser, useJadge];\n});\n\n_c = AllTweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTweetModal\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/molecules/AllTweetModal.tsx"],"names":["Button","Box","Flex","Spacer","Stack","Text","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Textarea","useEffect","useState","useCurrentLoginUser","FaRegThumbsUp","FaThumbsUp","FaRegCommentAlt","ProfileImage","useJadge","AllTweetModal","props","tweetId","allTweets","onClose","isOpen","insertTweetLike","deleteTweetLike","insertTweetComment","insertFollow","deleteFollow","targetTweet","setTargetTweet","comment","setComment","loginUser","isLike","isFollow","onClickLike","onChangeTweetComment","event","target","value","onClickTweetComment","onClickFollow","email","findTweet","find","allTweet","id","profileImage","username","time","tweet","opacity","cursor","tweetLikeCount","tweetCommentCount","tweetCommentResource","length","map","commentResource"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { Box, Flex, Spacer, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { ChangeEvent, useEffect, useState, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\r\nimport { ProfileImage } from \"../atoms/ProfileImage\";\r\nimport { useJadge } from \"../../hooks/useJadge\";\r\n\r\ntype Props = {\r\n    tweetId?: Number;\r\n    allTweets: Array<TweetType>;\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n    insertTweetLike: (tweetId?: Number) => void;\r\n    deleteTweetLike: (tweetId?: Number) => void;\r\n    insertTweetComment: (tweetId?: Number, comment?: string) => void;\r\n    insertFollow: (followemail?: string) => void;\r\n    deleteFollow: (followemail?: string) => void;\r\n};\r\n\r\nexport const AllTweetModal: VFC<Props> = (props) => {\r\n    const {tweetId, allTweets, onClose, isOpen, insertTweetLike, deleteTweetLike, insertTweetComment, insertFollow, deleteFollow} = props;\r\n    const [targetTweet, setTargetTweet] = useState<TweetType>();\r\n    const [comment, setComment] = useState(\"\");\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const {isLike, isFollow} = useJadge();\r\n\r\n    const onClickLike = () => {\r\n        if(isLike()){\r\n            deleteTweetLike(tweetId);\r\n        }else{\r\n            insertTweetLike(tweetId);\r\n        };\r\n    };\r\n    const onChangeTweetComment = (event: ChangeEvent<HTMLTextAreaElement>) => setComment(event.target.value);\r\n    const onClickTweetComment = () => {\r\n        insertTweetComment(tweetId, comment);\r\n        setComment(\"\");\r\n    };\r\n\r\n    const onClickFollow = () => {\r\n        if(isFollow(targetTweet?.email)){\r\n            deleteFollow(targetTweet?.email);\r\n        }else{\r\n            insertFollow(targetTweet?.email);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const findTweet = allTweets.find((allTweet) => tweetId === allTweet.id);\r\n        setTargetTweet(findTweet);\r\n    });\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>Tweet</ModalHeader>\r\n                    <ModalBody>\r\n                        <Box>\r\n                            <Flex>\r\n                                <Flex>\r\n                                    <Box mr={2}>\r\n                                        <ProfileImage size={\"60px\"} image={targetTweet?.profileImage}/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <Text fontSize=\"lg\" fontWeight=\"bold\">{targetTweet?.username}</Text>\r\n                                        <Text fontSize=\"sm\">{targetTweet?.time}</Text>\r\n                                        <Text fontSize=\"lg\" my={3}>{targetTweet?.tweet}</Text>\r\n                                    </Box>\r\n                                </Flex>\r\n                                <Spacer />\r\n                                {isFollow(targetTweet?.email) ? (\r\n                                    <Box>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            fontSize=\"xs\"\r\n                                            backgroundColor=\"gray.400\"\r\n                                            borderRadius=\"full\"\r\n                                            _hover={{opacity: \"0.7\"}}\r\n                                            onClick={onClickFollow}\r\n                                        >\r\n                                            フォロー中\r\n                                        </Button>\r\n                                    </Box>\r\n                                ) : (\r\n                                    <Box>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            fontSize=\"xs\"\r\n                                            backgroundColor=\"blue.300\"\r\n                                            borderRadius=\"full\"\r\n                                            _hover={{opacity: \"0.7\"}}\r\n                                            onClick={onClickFollow}\r\n                                        >\r\n                                            フォロー\r\n                                        </Button>\r\n                                    </Box>\r\n                                )}\r\n                            </Flex>\r\n                            <Flex ml={4}>\r\n                                <Flex align=\"center\" _hover={{cursor: \"pointer\"}} onClick={onClickLike}>\r\n                                    <Box>\r\n                                        {isLike(targetTweet) ? (\r\n                                            <FaThumbsUp size={16}/>\r\n                                        ) : (\r\n                                            <FaRegThumbsUp size={16} />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Text ml={2}>{targetTweet?.tweetLikeCount}</Text>\r\n                                </Flex>\r\n                                <Flex align=\"center\" ml={10}>\r\n                                    <Box>\r\n                                        <FaRegCommentAlt size={16}/>\r\n                                    </Box>\r\n                                    <Text ml={2}>{targetTweet?.tweetCommentCount}</Text>\r\n                                </Flex>\r\n                            </Flex>\r\n                            <Flex align=\"end\" my={6}>\r\n                                <Textarea borderColor=\"gray.300\" placeholder=\"コメントする\" value={comment} onChange={onChangeTweetComment}/>\r\n                                <Button backgroundColor=\"gray.400\" ml={2} _hover={{opacity: \"0.7\"}} disabled={comment === \"\"} onClick={onClickTweetComment}>コメント</Button>\r\n                            </Flex>\r\n                            {targetTweet?.tweetCommentResource?.length === 0 ? (\r\n                                <>\r\n                                </>\r\n                            ) : (\r\n                                <Stack spacing={4} mt={10} mb={2}>\r\n                                {targetTweet?.tweetCommentResource?.map((commentResource) => (\r\n                                    <Flex p={1}>\r\n                                        <Box>\r\n                                        <ProfileImage size={\"40px\"} image={targetTweet?.profileImage}/>\r\n                                        </Box>\r\n                                        <Box ml={2}>\r\n                                            <Text fontSize=\"md\" fontWeight=\"bold\">{commentResource.username}</Text>\r\n                                            <Text fontSize=\"xs\">{commentResource.time}</Text>\r\n                                            <Text fontSize=\"md\">{commentResource.comment}</Text>\r\n                                        </Box>\r\n                                    </Flex>\r\n                                ))}\r\n                                </Stack>\r\n                            )}\r\n                        </Box>\r\n                    </ModalBody>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}