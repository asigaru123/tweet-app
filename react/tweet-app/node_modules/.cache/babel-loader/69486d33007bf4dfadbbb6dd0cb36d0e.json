{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\pages\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Flex, Heading, Link, Stack } from \"@chakra-ui/layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\nimport { SignupModal } from \"../molecules/SignupModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const {\n    onOpen,\n    isOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    login\n  } = useLoginUser();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    login(data.email, data.password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      justify: \"center\",\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        backgroundColor: \"gray.100\",\n        borderRadius: \"10px\",\n        boxShadow: \"md\",\n        textAlign: \"center\",\n        p: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 6,\n          p: 4,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"80%\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  border: \"1px\",\n                  borderColor: \"gray.300\",\n                  placeholder: \"E-Mail\",\n                  ...register(\"email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 37\n                }, this), errors.email && \"Eメールを入力してください\", /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  border: \"1px\",\n                  borderColor: \"gray.300\",\n                  placeholder: \"Password\",\n                  ...register(\"password\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 37\n                }, this), errors.password && \"パスワードを入力してください\", /*#__PURE__*/_jsxDEV(Button, {\n                  backgroundColor: \"teal.400\",\n                  _hover: {\n                    opacity: \"0.7\"\n                  },\n                  w: \"100%\",\n                  children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              fontWeight: \"bold\",\n              color: \"gray.500\",\n              onClick: onOpen,\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u767B\\u9332\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignupModal, {\n      onClose: onClose,\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"gC0OFIqG/fjCCsSzdsEDrwTNKgM=\", false, function () {\n  return [useDisclosure, useLoginUser, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/pages/Login.tsx"],"names":["Button","useDisclosure","Input","Box","Flex","Heading","Link","Stack","useForm","useLoginUser","SignupModal","Login","onOpen","isOpen","onClose","login","register","formState","errors","handleSubmit","onSubmit","data","console","log","email","password","opacity"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Flex, Heading, Link, Stack } from \"@chakra-ui/layout\";\r\nimport { ChangeEvent, useState, VFC } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\r\nimport { SignupModal } from \"../molecules/SignupModal\";\r\n\r\ntype LoginInputType = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport const Login: VFC = () => {\r\n    const {onOpen, isOpen, onClose} = useDisclosure();\r\n    const {login} = useLoginUser();\r\n    const {register, formState: { errors }, handleSubmit} = useForm<LoginInputType>();\r\n    const onSubmit: SubmitHandler<LoginInputType> = data => {\r\n        console.log(data);\r\n        login(data.email, data.password);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Flex align=\"center\" justify=\"center\" h=\"100vh\">\r\n                <Box backgroundColor=\"gray.100\" borderRadius=\"10px\" boxShadow=\"md\" textAlign=\"center\" p={4}>\r\n                    <Heading>Login</Heading>\r\n                    <Box mt={6} p={4}>\r\n                        <Stack spacing={4}>\r\n                            <Box w=\"80%\">\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Input border=\"1px\" borderColor=\"gray.300\" placeholder=\"E-Mail\" {...register(\"email\")}/>\r\n                                    {errors.email && \"Eメールを入力してください\"}\r\n                                    <Input type=\"password\" border=\"1px\" borderColor=\"gray.300\" placeholder=\"Password\" {...register(\"password\")}/>\r\n                                    {errors.password && \"パスワードを入力してください\"}\r\n                                    <Button backgroundColor=\"teal.400\" _hover={{opacity: \"0.7\"}} w=\"100%\">ログイン</Button>\r\n                                </form>\r\n                            </Box>\r\n                        </Stack>\r\n                        <Box mt={4}>\r\n                            <Link fontWeight=\"bold\" color=\"gray.500\" onClick={onOpen}>ユーザー登録</Link>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Flex>\r\n            <SignupModal onClose={onClose} isOpen={isOpen}/>\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}