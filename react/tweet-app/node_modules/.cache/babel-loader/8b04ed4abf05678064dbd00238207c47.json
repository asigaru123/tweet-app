{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\provider\\\\LoginUserProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginUserContext = /*#__PURE__*/createContext({});\nexport const LoginUserProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [loginUser, setLoginUser] = useState({});\n  return /*#__PURE__*/_jsxDEV(LoginUserContext.Provider, {\n    value: {\n      loginUser,\n      setLoginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginUserProvider, \"FYbIBwKGgyQNwcpzmrzUlScIiao=\");\n\n_c = LoginUserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUserProvider\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/provider/LoginUserProvider.tsx"],"names":["createContext","useState","LoginUserContext","LoginUserProvider","props","children","loginUser","setLoginUser"],"mappings":";;;AAAA,SAASA,aAAT,EAA6DC,QAA7D,QAA6E,OAA7E;;AAQA,OAAO,MAAMC,gBAAgB,gBAAGF,aAAa,CAAuB,EAAvB,CAAtC;AAEP,OAAO,MAAMG,iBAAiB,GAAIC,KAAD,IAAkC;AAAA;;AAC/D,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAW,EAAX,CAA1C;AAEA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACK,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAlC;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATM;;GAAMF,iB;;KAAAA,iB","sourcesContent":["import { createContext, Dispatch, ReactNode, SetStateAction, useState } from \"react\";\r\nimport { UserType } from \"../types/userType\";\r\n\r\nexport type LoginUserContextType = {\r\n    loginUser: UserType;\r\n    setLoginUser: Dispatch<SetStateAction<UserType>>;\r\n};\r\n\r\nexport const LoginUserContext = createContext<LoginUserContextType>({} as LoginUserContextType);\r\n\r\nexport const LoginUserProvider = (props: {children: ReactNode}) => {\r\n    const {children} = props;\r\n    const [loginUser, setLoginUser] = useState<UserType>({});\r\n\r\n    return (\r\n        <LoginUserContext.Provider value={{loginUser, setLoginUser}}>\r\n            {children}\r\n        </LoginUserContext.Provider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}