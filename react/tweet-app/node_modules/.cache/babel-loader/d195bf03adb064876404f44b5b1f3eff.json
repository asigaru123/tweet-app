{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\molecules\\\\MyTweetModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Stack } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { Textarea } from \"@chakra-ui/textarea\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyTweetModal = props => {\n  _s();\n\n  const {\n    tweetCount,\n    myTweets,\n    onClose,\n    isOpen\n  } = props;\n  const [targetTweet, setTargetTweet] = useState();\n  useEffect(() => {\n    const findTweet = myTweets.find(myTweet => tweetCount === myTweet.id);\n    setTargetTweet(findTweet);\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              value: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyTweetModal, \"DZlnDiok4a86N6nBDWIKrW51w2I=\");\n\n_c = MyTweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTweetModal\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/molecules/MyTweetModal.tsx"],"names":["Stack","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Textarea","useEffect","useState","MyTweetModal","props","tweetCount","myTweets","onClose","isOpen","targetTweet","setTargetTweet","findTweet","find","myTweet","id","tweet"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,mBAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,gBAA3B,EAA6CC,YAA7C,EAA2DC,WAA3D,EAAwEC,YAAxE,QAA4F,kBAA5F;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAyC,OAAzC;;AAUA,OAAO,MAAMC,YAAwB,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAA0CJ,KAAhD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAGL,QAAQ,CAACM,IAAT,CAAeC,OAAD,IAAaR,UAAU,KAAKQ,OAAO,CAACC,EAAlD,CAAlB;AACAJ,IAAAA,cAAc,CAACC,SAAD,CAAd;AACH,GAHQ,CAAT;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,OAAhB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAA,2BACI,QAAC,YAAD;AAAA,6BACI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,iCACI,QAAC,KAAD;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEC,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEM;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvBM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import { Stack } from \"@chakra-ui/layout\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { useEffect, useState, VFC } from \"react\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\n\r\ntype Props = {\r\n    tweetCount?: Number;\r\n    myTweets: Array<TweetType>;\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n};\r\n\r\nexport const MyTweetModal: VFC<Props> = (props) => {\r\n    const {tweetCount, myTweets, onClose, isOpen} = props;\r\n    const [targetTweet, setTargetTweet] = useState<TweetType>();\r\n\r\n    useEffect(() => {\r\n        const findTweet = myTweets.find((myTweet) => tweetCount === myTweet.id);\r\n        setTargetTweet(findTweet);\r\n    });\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>Tweet</ModalHeader>\r\n                    <ModalBody>\r\n                        <Stack>\r\n                            <Textarea value={targetTweet?.tweet}/>\r\n                        </Stack>\r\n                    </ModalBody>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}