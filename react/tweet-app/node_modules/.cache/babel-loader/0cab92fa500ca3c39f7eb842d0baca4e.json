{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\nexport const useJadge = () => {\n  _s();\n\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n\n  const isLike = tweet => {\n    var _tweet$tweetLikeList;\n\n    let isLikeFrag = false;\n\n    if ((tweet === null || tweet === void 0 ? void 0 : (_tweet$tweetLikeList = tweet.tweetLikeList) === null || _tweet$tweetLikeList === void 0 ? void 0 : _tweet$tweetLikeList.length) !== undefined) {\n      for (let i = 0; i < tweet.tweetLikeList.length; ++i) {\n        if (loginUser.email === tweet.tweetLikeList[i]) {\n          isLikeFrag = true;\n          break;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    console.log(\"isLike\");\n    return isLikeFrag;\n  };\n\n  const isFollow = targetTweetEmail => {\n    var _loginUser$follow;\n\n    let isFollowFrag = false;\n\n    if (((_loginUser$follow = loginUser.follow) === null || _loginUser$follow === void 0 ? void 0 : _loginUser$follow.length) !== undefined) {\n      for (let i = 0; i < loginUser.follow.length; ++i) {\n        if (loginUser.follow[i].followemail === targetTweetEmail) {\n          isFollowFrag = true;\n          break;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    console.log(\"isFollow\");\n    return isFollowFrag;\n  };\n\n  return {\n    isLike,\n    isFollow\n  };\n};\n\n_s(useJadge, \"b+k38yjsSU3BfqQ8jVBhTK3eCR0=\", false, function () {\n  return [useCurrentLoginUser];\n});","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/hooks/useJadge.tsx"],"names":["useCurrentLoginUser","useJadge","loginUser","isLike","tweet","isLikeFrag","tweetLikeList","length","undefined","i","email","console","log","isFollow","targetTweetEmail","isFollowFrag","follow","followemail"],"mappings":";;AACA,SAASA,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAcF,mBAAmB,EAAvC;;AAEA,QAAMG,MAAM,GAAIC,KAAD,IAAuB;AAAA;;AAClC,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAG,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,oCAAAA,KAAK,CAAEE,aAAP,8EAAsBC,MAAtB,MAAiCC,SAApC,EAA8C;AAC1C,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGL,KAAK,CAACE,aAAN,CAAoBC,MAArC,EAA6C,EAAEE,CAA/C,EAAiD;AAC7C,YAAGP,SAAS,CAACQ,KAAV,KAAoBN,KAAK,CAACE,aAAN,CAAoBG,CAApB,CAAvB,EAA8C;AAC1CJ,UAAAA,UAAU,GAAG,IAAb;AACA;AACH;;AAAA;AACJ;;AAAA;AACJ;;AAAA;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAOP,UAAP;AACH,GAZD;;AAcA,QAAMQ,QAAQ,GAAIC,gBAAD,IAA+B;AAAA;;AAC5C,QAAIC,YAAY,GAAG,KAAnB;;AACA,QAAG,sBAAAb,SAAS,CAACc,MAAV,wEAAkBT,MAAlB,MAA6BC,SAAhC,EAA0C;AACtC,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGP,SAAS,CAACc,MAAV,CAAkBT,MAAnC,EAA2C,EAAEE,CAA7C,EAA+C;AAC3C,YAAGP,SAAS,CAACc,MAAV,CAAkBP,CAAlB,EAAqBQ,WAArB,KAAqCH,gBAAxC,EAAyD;AACrDC,UAAAA,YAAY,GAAG,IAAf;AACA;AACH;;AAAA;AACJ;;AAAA;AACJ;;AAAA;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAOG,YAAP;AACH,GAZD;;AAcA,SAAO;AAACZ,IAAAA,MAAD;AAASU,IAAAA;AAAT,GAAP;AACH,CAhCM;;GAAMZ,Q;UACWD,mB","sourcesContent":["import { TweetType } from \"../types/tweetType\";\r\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\r\n\r\nexport const useJadge = () => {\r\n    const {loginUser} = useCurrentLoginUser();\r\n\r\n    const isLike = (tweet?: TweetType) => {\r\n        let isLikeFrag = false;\r\n        if(tweet?.tweetLikeList?.length !== undefined){\r\n            for(let i=0; i < tweet.tweetLikeList.length; ++i){\r\n                if(loginUser.email === tweet.tweetLikeList[i]){\r\n                    isLikeFrag = true;\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n        console.log(\"isLike\");\r\n        return isLikeFrag;\r\n    };\r\n\r\n    const isFollow = (targetTweetEmail?: string) => {\r\n        let isFollowFrag = false;\r\n        if(loginUser.follow?.length !== undefined){\r\n            for(let i=0; i < loginUser.follow!.length; ++i){\r\n                if(loginUser.follow![i].followemail === targetTweetEmail){\r\n                    isFollowFrag = true;\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n        console.log(\"isFollow\");\r\n        return isFollowFrag;\r\n    };\r\n\r\n    return {isLike, isFollow};\r\n};"]},"metadata":{},"sourceType":"module"}