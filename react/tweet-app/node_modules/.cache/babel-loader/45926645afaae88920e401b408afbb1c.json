{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\nimport axios from \"axios\";\nexport const useGetAllTweets = () => {\n  _s();\n\n  const [getAllTweetsState, setGetAllTweetsState] = useState(false);\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n  const [allTweets, setAllTweets] = useState([]);\n\n  const getAllTweets = () => {\n    setGetAllTweetsState(true);\n    axios.get(\"http://localhost:8080/api/home/allTweets\", {\n      headers: {\n        Authorization: loginUser.token\n      }\n    }).then(res => {\n      setAllTweets(res.data.filter(allTweet => {\n        return allTweet.email !== loginUser.email;\n      }));\n      setGetAllTweetsState(false);\n      console.log(res.data);\n      console.log(allTweets);\n    }).catch(() => {\n      setGetAllTweetsState(false);\n    });\n  };\n\n  return {\n    getAllTweetsState,\n    allTweets,\n    getAllTweets\n  };\n};\n\n_s(useGetAllTweets, \"HSXpzw+b7LuqSOxsZbUT16tyiOM=\", false, function () {\n  return [useCurrentLoginUser];\n});","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/hooks/useGetAllTweets.tsx"],"names":["useState","useCurrentLoginUser","axios","useGetAllTweets","getAllTweetsState","setGetAllTweetsState","loginUser","allTweets","setAllTweets","getAllTweets","get","headers","Authorization","token","then","res","data","filter","allTweet","email","console","log","catch"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAACM,IAAAA;AAAD,MAAcL,mBAAmB,EAAvC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAmB,EAAnB,CAA1C;;AACA,QAAMS,YAAY,GAAG,MAAM;AACvBJ,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAH,IAAAA,KAAK,CAACQ,GAAN,CAA4B,0CAA5B,EAAwE;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEN,SAAS,CAACO;AAA1B;AAAV,KAAxE,EACCC,IADD,CACOC,GAAD,IAAS;AACXP,MAAAA,YAAY,CAACO,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAiBC,QAAD,IAAc;AACvC,eAAQA,QAAQ,CAACC,KAAT,KAAmBb,SAAS,CAACa,KAArC;AACH,OAFY,CAAD,CAAZ;AAGAd,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,IAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACH,KARD,EASCe,KATD,CASO,MAAM;AACTjB,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,KAXD;AAYH,GAdD;;AAgBA,SAAO;AAACD,IAAAA,iBAAD;AAAoBG,IAAAA,SAApB;AAA+BE,IAAAA;AAA/B,GAAP;AACH,CArBM;;GAAMN,e;UAEWF,mB","sourcesContent":["import { useState } from \"react\";\r\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\r\nimport { TweetType } from \"../types/tweetType\";\r\nimport axios from \"axios\";\r\n\r\nexport const useGetAllTweets = () => {\r\n    const [getAllTweetsState, setGetAllTweetsState] = useState(false);\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const [allTweets, setAllTweets] = useState<Array<TweetType>>([]);\r\n    const getAllTweets = () => {\r\n        setGetAllTweetsState(true);\r\n        axios.get<Array<TweetType>>(\"http://localhost:8080/api/home/allTweets\", {headers: {Authorization: loginUser.token as string}})\r\n        .then((res) => {\r\n            setAllTweets(res.data.filter((allTweet) => {\r\n                return (allTweet.email !== loginUser.email);\r\n            }));\r\n            setGetAllTweetsState(false);\r\n            console.log(res.data);\r\n            console.log(allTweets);\r\n        })\r\n        .catch(() => {\r\n            setGetAllTweetsState(false);\r\n        });\r\n    };\r\n\r\n    return {getAllTweetsState, allTweets, getAllTweets};\r\n};"]},"metadata":{},"sourceType":"module"}