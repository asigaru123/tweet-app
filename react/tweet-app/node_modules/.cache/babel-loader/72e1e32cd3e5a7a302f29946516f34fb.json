{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\nimport { useMessage } from \"./useMessage\";\nexport const useEditUserAccount = () => {\n  _s();\n\n  const {\n    showMessage\n  } = useMessage();\n  const [editUserAccountState, setEditUserAccount] = useState(false);\n  const {\n    loginUser,\n    setLoginUser\n  } = useCurrentLoginUser();\n\n  const editUserAccount = (password, username) => {\n    setEditUserAccount(true);\n    axios.post(\"/api/login/editUserAccount\", {\n      email: loginUser.email,\n      password: password,\n      username: username\n    }, {\n      headers: {\n        Authorization: loginUser.token\n      }\n    }).then(res => {\n      showMessage({\n        title: res.data,\n        status: \"success\"\n      });\n      setEditUserAccount(false);\n      findUserAccount();\n      console.log(loginUser.username);\n    }).catch(res => {\n      showMessage({\n        title: res.data,\n        status: \"success\"\n      });\n      setEditUserAccount(false);\n    });\n  };\n\n  const findUserAccount = () => {\n    axios.get(`/api/login/findUserAccount/${loginUser.email}`, {\n      headers: {\n        Authorization: loginUser.token\n      }\n    }).then(res => {\n      setLoginUser({ ...loginUser,\n        username: res.data.username\n      });\n    });\n  };\n\n  return {\n    editUserAccountState,\n    editUserAccount\n  };\n};\n\n_s(useEditUserAccount, \"DsVv7Mfeyox1P/vGq4wR5gKI+3E=\", false, function () {\n  return [useMessage, useCurrentLoginUser];\n});","map":{"version":3,"sources":["C:/Users/yuma/Desktop/dev/フロント/tweet-app/src/hooks/useEditUserAccount.tsx"],"names":["axios","useState","useCurrentLoginUser","useMessage","useEditUserAccount","showMessage","editUserAccountState","setEditUserAccount","loginUser","setLoginUser","editUserAccount","password","username","post","email","headers","Authorization","token","then","res","title","data","status","findUserAccount","console","log","catch","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAgBF,UAAU,EAAhC;AACA,QAAM,CAACG,oBAAD,EAAuBC,kBAAvB,IAA6CN,QAAQ,CAAC,KAAD,CAA3D;AACA,QAAM;AAACO,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4BP,mBAAmB,EAArD;;AACA,QAAMQ,eAAe,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAwC;AAC5DL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAP,IAAAA,KAAK,CAACa,IAAN,CAAW,4BAAX,EAAyC;AAACC,MAAAA,KAAK,EAAEN,SAAS,CAACM,KAAlB;AAAyBH,MAAAA,QAAQ,EAAEA,QAAnC;AAA6CC,MAAAA,QAAQ,EAAEA;AAAvD,KAAzC,EAA2G;AAACG,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAER,SAAS,CAACS;AAA1B;AAAV,KAA3G,EACCC,IADD,CACOC,GAAD,IAAS;AACXd,MAAAA,WAAW,CAAC;AAACe,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAZ;AAA4BC,QAAAA,MAAM,EAAE;AAApC,OAAD,CAAX;AACAf,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAgB,MAAAA,eAAe;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACI,QAAtB;AACH,KAND,EAOCc,KAPD,CAOQP,GAAD,IAAS;AACZd,MAAAA,WAAW,CAAC;AAACe,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAZ;AAA4BC,QAAAA,MAAM,EAAE;AAApC,OAAD,CAAX;AACAf,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAVD;AAWH,GAbD;;AAcA,QAAMgB,eAAe,GAAG,MAAM;AAC1BvB,IAAAA,KAAK,CAAC2B,GAAN,CAAqB,8BAA6BnB,SAAS,CAACM,KAAM,EAAlE,EAAqE;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAER,SAAS,CAACS;AAA1B;AAAV,KAArE,EACCC,IADD,CACOC,GAAD,IAAS;AACXV,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeI,QAAAA,QAAQ,EAAEO,GAAG,CAACE,IAAJ,CAAST;AAAlC,OAAD,CAAZ;AACH,KAHD;AAIH,GALD;;AAOA,SAAO;AAACN,IAAAA,oBAAD;AAAuBI,IAAAA;AAAvB,GAAP;AACH,CA1BM;;GAAMN,kB;UACaD,U,EAEYD,mB","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { UserType } from \"../types/userType\";\r\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\nexport const useEditUserAccount = () => {\r\n    const {showMessage} = useMessage();\r\n    const [editUserAccountState, setEditUserAccount] = useState(false);\r\n    const {loginUser, setLoginUser} = useCurrentLoginUser();\r\n    const editUserAccount = (password: string, username: string) => {\r\n        setEditUserAccount(true);\r\n        axios.post(\"/api/login/editUserAccount\", {email: loginUser.email, password: password, username: username}, {headers: {Authorization: loginUser.token as string}})\r\n        .then((res) => {\r\n            showMessage({title: res.data as string, status: \"success\"});\r\n            setEditUserAccount(false);\r\n            findUserAccount();\r\n            console.log(loginUser.username);\r\n        })\r\n        .catch((res) => {\r\n            showMessage({title: res.data as string, status: \"success\"});\r\n            setEditUserAccount(false)\r\n        });\r\n    };\r\n    const findUserAccount = () => {\r\n        axios.get<UserType>(`/api/login/findUserAccount/${loginUser.email}`, {headers: {Authorization: loginUser.token as string}})\r\n        .then((res) => {\r\n            setLoginUser({...loginUser, username: res.data.username});\r\n        })\r\n    };\r\n\r\n    return {editUserAccountState, editUserAccount};\r\n};"]},"metadata":{},"sourceType":"module"}