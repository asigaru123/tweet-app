{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\molecules\\\\ImageUploadModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageUploadModal = props => {\n  _s();\n\n  const {\n    onClose,\n    isOpen\n  } = props;\n  const [profileIcon, setProfileIcon] = useState();\n\n  const getBase64 = file => {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      let baseURL = reader.result;\n      setProfileIcon(baseURL);\n    };\n  };\n\n  const handleFileInputChange = event => {\n    let image = event.target.files[0];\n    getBase64(image);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"\\u753B\\u50CF\\u3092\\u5909\\u66F4\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              accept: \"image/*\",\n              border: \"none\",\n              onChange: handleFileInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            p: 4,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: profileIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageUploadModal, \"XBTwimgwJK89PMbRiN10wf/KR+A=\");\n\n_c = ImageUploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/molecules/ImageUploadModal.tsx"],"names":["Button","Image","Input","Box","Flex","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","useState","ImageUploadModal","props","onClose","isOpen","profileIcon","setProfileIcon","getBase64","file","reader","FileReader","readAsDataURL","onload","baseURL","result","handleFileInputChange","event","image","target","files"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,GAAT,EAAcC,IAAd,QAAgC,mBAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,gBAA3B,EAA6CC,YAA7C,EAA2DC,WAA3D,EAAwEC,YAAxE,QAA4F,kBAA5F;AACA,SAA8BC,QAA9B,QAAmD,OAAnD;;AAQA,OAAO,MAAMC,gBAA4B,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAoBF,KAA1B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;;AAEA,QAAMO,SAAS,GAAIC,IAAD,IAAgB;AAC9B,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBH,IAArB;;AACAC,IAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AAClB,UAAIC,OAAO,GAAGJ,MAAM,CAACK,MAArB;AACAR,MAAAA,cAAc,CAACO,OAAD,CAAd;AACH,KAHD;AAIH,GAPD;;AASA,QAAME,qBAAqB,GAAIC,KAAD,IAA0C;AACpE,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAoB,CAApB,CAAZ;AACAZ,IAAAA,SAAS,CAACU,KAAD,CAAT;AACH,GAHD;;AAKA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEd,OAAhB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAA,2BACI,QAAC,YAAD;AAAA,6BACI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,QAAZ;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,MAAM,EAAC,SAA1B;AAAoC,cAAA,MAAM,EAAC,MAA3C;AAAkD,cAAA,QAAQ,EAAEW;AAA5D;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,CAAC,EAAC,MAAP;AAAc,YAAA,CAAC,EAAE,CAAjB;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAEV;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArCM;;GAAMJ,gB;;KAAAA,gB","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Flex, Text } from \"@chakra-ui/layout\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\r\nimport { ChangeEvent, useRef, useState, VFC } from \"react\";\r\nimport { useChangeImage } from \"../../hooks/useChangeImage\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n};\r\n\r\nexport const ImageUploadModal: VFC<Props> = (props) => {\r\n    const {onClose, isOpen} = props;\r\n    const [profileIcon, setProfileIcon] = useState<string>();\r\n\r\n    const getBase64 = (file: File) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            let baseURL = reader.result as string;\r\n            setProfileIcon(baseURL);\r\n        };\r\n    }\r\n    \r\n    const handleFileInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let image = event.target.files![0];\r\n        getBase64(image);\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>画像を変更する</ModalHeader>\r\n                    <ModalBody>\r\n                        <Flex align=\"center\">\r\n                            <Input type=\"file\" accept=\"image/*\" border=\"none\" onChange={handleFileInputChange}/>\r\n                            <Button>リセット</Button>\r\n                        </Flex>\r\n                        <Box w=\"100%\" p={4}>\r\n                            <Image src={profileIcon}/>\r\n                        </Box>\r\n                    </ModalBody>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}