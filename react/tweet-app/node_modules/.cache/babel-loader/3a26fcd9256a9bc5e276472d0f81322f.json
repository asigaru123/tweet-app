{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useCreateUser = () => {\n  _s();\n\n  const ip = process.env.REACT_APP_IP_APSRV;\n  const [createUserState, setCreateUserState] = useState(false);\n  const {\n    showMessage\n  } = useMessage();\n\n  const createUser = (email, password, username) => {\n    setCreateUserState(true);\n    axios.post(\"/api/login/signup\", {\n      email: email,\n      password: password,\n      username: username\n    }).then(res => {\n      showMessage({\n        title: res.data,\n        status: \"success\"\n      });\n      setCreateUserState(false);\n    }).catch(res => {\n      showMessage({\n        title: res.response.data === undefined ? \"ユーザー登録に失敗しました\" : res.response.data,\n        status: \"error\"\n      });\n      setCreateUserState(true);\n    });\n  };\n\n  return {\n    createUser,\n    createUserState\n  };\n};\n\n_s(useCreateUser, \"WJtkNyIkb1dzJ9Hr/UooF34hjHs=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"sources":["C:/Users/yuma/Desktop/dev/フロント/tweet-app/src/hooks/useCreateUser.tsx"],"names":["axios","useState","useMessage","useCreateUser","ip","process","env","REACT_APP_IP_APSRV","createUserState","setCreateUserState","showMessage","createUser","email","password","username","post","then","res","title","data","status","catch","response","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAMC,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAACS,IAAAA;AAAD,MAAgBR,UAAU,EAAhC;;AACA,QAAMS,UAAU,GAAG,CAACC,KAAD,EAAgBC,QAAhB,EAAkCC,QAAlC,KAAuD;AACtEL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAT,IAAAA,KAAK,CAACe,IAAN,CAAW,mBAAX,EAAgC;AAACH,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,QAAQ,EAAEA,QAAzB;AAAmCC,MAAAA,QAAQ,EAAEA;AAA7C,KAAhC,EACCE,IADD,CACOC,GAAD,IAAS;AACXP,MAAAA,WAAW,CAAC;AAACQ,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAZ;AAA4BC,QAAAA,MAAM,EAAE;AAApC,OAAD,CAAX;AACAX,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAJD,EAKCY,KALD,CAKQJ,GAAD,IAAS;AACZP,MAAAA,WAAW,CAAC;AAACQ,QAAAA,KAAK,EAAED,GAAG,CAACK,QAAJ,CAAaH,IAAb,KAAsBI,SAAtB,GAAmC,eAAnC,GAAuDN,GAAG,CAACK,QAAJ,CAAaH,IAA5E;AAAmFC,QAAAA,MAAM,EAAE;AAA3F,OAAD,CAAX;AACAX,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KARD;AASH,GAXD;;AAaA,SAAO;AAACE,IAAAA,UAAD;AAAaH,IAAAA;AAAb,GAAP;AACH,CAlBM;;GAAML,a;UAGaD,U","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\nexport const useCreateUser = () => {\r\n    const ip = process.env.REACT_APP_IP_APSRV;\r\n    const [createUserState, setCreateUserState] = useState(false);\r\n    const {showMessage} = useMessage();\r\n    const createUser = (email: string, password: string, username: string) => {\r\n        setCreateUserState(true);\r\n        axios.post(\"/api/login/signup\", {email: email, password: password, username: username})\r\n        .then((res) => {\r\n            showMessage({title: res.data as string, status: \"success\"});\r\n            setCreateUserState(false);\r\n        })\r\n        .catch((res) => {\r\n            showMessage({title: res.response.data === undefined ? (\"ユーザー登録に失敗しました\") : (res.response.data), status: \"error\"});\r\n            setCreateUserState(true);\r\n        });\r\n    };\r\n\r\n    return {createUser, createUserState};\r\n};"]},"metadata":{},"sourceType":"module"}