{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\pages\\\\Tweet.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from \"@chakra-ui/image\";\nimport { Box, Flex, Heading, Stack, Text } from \"@chakra-ui/layout\";\nimport { useEffect, useState } from \"react\";\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\nimport { useGetAllTweets } from \"../../hooks/useGetAllTweets\";\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { AllTweetModal } from \"../molecules/AllTweetModal\";\nimport { useTweetLike } from \"../../hooks/useTweetLike\";\nimport { useTweetComment } from \"../../hooks/useTweetComment\";\nimport { useFollow } from \"../../hooks/useFollow\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Tweet = () => {\n  _s();\n\n  const {\n    onOpen,\n    onClose,\n    isOpen\n  } = useDisclosure();\n  const history = useHistory();\n  const {\n    allTweets,\n    getAllTweets\n  } = useGetAllTweets();\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n  const {\n    tweetLikeState,\n    insertTweetLike,\n    deleteTweetLike\n  } = useTweetLike();\n  const {\n    tweetCommentState,\n    insertTweetComment\n  } = useTweetComment();\n  const {\n    followState,\n    insertFollow,\n    deleteFollow\n  } = useFollow();\n  const [tweetId, setTweetId] = useState();\n  const {\n    getMyFollow\n  } = useFollow();\n\n  const onClickSendCount = tweetId => {\n    setTweetId(tweetId);\n    onOpen();\n  };\n\n  const isMyTweet = allTweet => {\n    let isMyTweet = false;\n\n    if (loginUser.email === (allTweet === null || allTweet === void 0 ? void 0 : allTweet.email)) {\n      isMyTweet = true;\n    }\n\n    return isMyTweet;\n  };\n\n  const isLike = allTweet => {\n    let isLikeFrag = false;\n\n    for (let likeName of allTweet === null || allTweet === void 0 ? void 0 : allTweet.tweetLikeList) {\n      if (loginUser.email === likeName) {\n        isLikeFrag = true;\n        break;\n      }\n    }\n\n    console.log(\"*****\");\n    return isLikeFrag;\n  }; // const IsProfileImage = memo((image) => {\n  //     let profileImage;\n  //     if(image !== \"\"){\n  //         profileImage = image;\n  //     }else{\n  //         profileImage = `${process.env.PUBLIC_URL}/user_icon.png`\n  //     };\n  //     console.log(image);\n  //     return (\n  //         <Image boxSize=\"50px\" borderRadius=\"full\" src={profileImage as string} alt=\"\" />\n  //     );\n  // });\n\n\n  const i = image => console.log(image);\n\n  useEffect(() => {\n    if (loginUser.token === undefined) {\n      history.push(\"/\");\n    }\n\n    ;\n    getAllTweets();\n    getMyFollow();\n    console.log(allTweets);\n  }, [tweetLikeState, tweetCommentState, followState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"teal.600\",\n      display: {\n        base: \"none\",\n        sm: \"block\"\n      },\n      position: \"fixed\",\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        ml: 2,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"3xl\",\n          color: \"whiteAlpha.800\",\n          p: 2,\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: {\n        sm: \"56\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        ml: 10,\n        mt: {\n          base: \"10\",\n          sm: \"24\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 6,\n          children: allTweets.map(allTweet => !isMyTweet(allTweet) && /*#__PURE__*/_jsxDEV(Flex, {\n            _hover: {\n              cursor: \"pointer\"\n            },\n            onClick: () => onClickSendCount(allTweet.id),\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              onClick: () => i,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                boxSize: \"50px\",\n                borderRadius: \"full\",\n                src: `${process.env.PUBLIC_URL}/user_icon.png`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                children: allTweet.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: allTweet.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                mt: 2,\n                mb: 4,\n                children: allTweet.tweet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    children: isLike(allTweet) ? /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n                      size: 18\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n                      size: 18\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    ml: 2,\n                    children: allTweet.tweetLikeCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  align: \"center\",\n                  ml: 8,\n                  children: [/*#__PURE__*/_jsxDEV(FaRegCommentAlt, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    ml: 2,\n                    children: allTweet.tweetCommentCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, allTweet.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllTweetModal, {\n      tweetId: tweetId,\n      allTweets: allTweets,\n      onClose: onClose,\n      isOpen: isOpen,\n      insertTweetLike: insertTweetLike,\n      deleteTweetLike: deleteTweetLike,\n      insertTweetComment: insertTweetComment,\n      insertFollow: insertFollow,\n      deleteFollow: deleteFollow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tweet, \"EfPjAaXREqMR9KKvwoCIda2pyVM=\", false, function () {\n  return [useDisclosure, useHistory, useGetAllTweets, useCurrentLoginUser, useTweetLike, useTweetComment, useFollow, useFollow];\n});\n\n_c = Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/pages/Tweet.tsx"],"names":["Image","Box","Flex","Heading","Stack","Text","useEffect","useState","useCurrentLoginUser","useGetAllTweets","FaRegThumbsUp","FaThumbsUp","FaRegCommentAlt","useDisclosure","AllTweetModal","useTweetLike","useTweetComment","useFollow","useHistory","Tweet","onOpen","onClose","isOpen","history","allTweets","getAllTweets","loginUser","tweetLikeState","insertTweetLike","deleteTweetLike","tweetCommentState","insertTweetComment","followState","insertFollow","deleteFollow","tweetId","setTweetId","getMyFollow","onClickSendCount","isMyTweet","allTweet","email","isLike","isLikeFrag","likeName","tweetLikeList","console","log","i","image","token","undefined","push","base","sm","map","cursor","id","process","env","PUBLIC_URL","username","time","tweet","tweetLikeCount","tweetCommentCount"],"mappings":"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","sourcesContent":["import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { memo, ReactNode, useEffect, useMemo, useState, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { useGetAllTweets } from \"../../hooks/useGetAllTweets\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { AllTweetModal } from \"../molecules/AllTweetModal\";\r\nimport { useTweetLike } from \"../../hooks/useTweetLike\";\r\nimport { useTweetComment } from \"../../hooks/useTweetComment\";\r\nimport { useFollow } from \"../../hooks/useFollow\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const Tweet: VFC = () => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const history = useHistory();\r\n    const {allTweets, getAllTweets} = useGetAllTweets();\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const {tweetLikeState, insertTweetLike, deleteTweetLike} = useTweetLike();\r\n    const {tweetCommentState, insertTweetComment} = useTweetComment();\r\n    const {followState, insertFollow, deleteFollow} = useFollow();\r\n    const [tweetId, setTweetId] = useState<Number>();\r\n    const {getMyFollow} = useFollow();\r\n\r\n    const onClickSendCount = (tweetId?: Number) => {\r\n        setTweetId(tweetId);\r\n        onOpen();\r\n    };\r\n    const isMyTweet = (allTweet?: TweetType) => {\r\n        let isMyTweet = false;\r\n        if(loginUser.email === allTweet?.email){\r\n            isMyTweet = true;\r\n        }\r\n        return isMyTweet;\r\n    };\r\n    const isLike = (allTweet?: TweetType) => {\r\n        let isLikeFrag = false;\r\n        for(let likeName of allTweet?.tweetLikeList!){\r\n            if(loginUser.email === likeName){\r\n                isLikeFrag = true;\r\n                break;\r\n            }\r\n        }\r\n        console.log(\"*****\");\r\n        return isLikeFrag;\r\n    };\r\n\r\n    // const IsProfileImage = memo((image) => {\r\n    //     let profileImage;\r\n    //     if(image !== \"\"){\r\n    //         profileImage = image;\r\n    //     }else{\r\n    //         profileImage = `${process.env.PUBLIC_URL}/user_icon.png`\r\n    //     };\r\n    //     console.log(image);\r\n\r\n    //     return (\r\n    //         <Image boxSize=\"50px\" borderRadius=\"full\" src={profileImage as string} alt=\"\" />\r\n    //     );\r\n    // });\r\n\r\n    const i = (image: string) => console.log(image);\r\n\r\n    useEffect(() => {\r\n        if(loginUser.token === undefined){\r\n            history.push(\"/\");\r\n        };\r\n        getAllTweets();\r\n        getMyFollow();\r\n        console.log(allTweets);\r\n    }, [tweetLikeState, tweetCommentState, followState]);\r\n\r\n    return (\r\n        <>\r\n            <Box backgroundColor=\"teal.600\" display={{base: \"none\", sm: \"block\"}} position=\"fixed\" w=\"100%\">\r\n                <Box ml={2}>\r\n                    <Heading fontSize=\"3xl\" color=\"whiteAlpha.800\" p={2}>Tweet</Heading>\r\n                </Box>\r\n            </Box>\r\n            <Box ml={{sm :\"56\"}}>\r\n                <Box ml={10} mt={{base: \"10\", sm: \"24\"}}>\r\n                    <Stack spacing={6}>\r\n                        {allTweets.map((allTweet) => (\r\n                            !isMyTweet(allTweet) &&\r\n                            <Flex key={allTweet.id as number} _hover={{cursor: \"pointer\"}} onClick={() => onClickSendCount(allTweet.id)}>\r\n                                <Box onClick={() => i}>\r\n                                    <Image boxSize=\"50px\" borderRadius=\"full\" src={`${process.env.PUBLIC_URL}/user_icon.png`} alt=\"\"/>\r\n                                </Box>\r\n                                <Box p={2}>\r\n                                    <Text fontWeight=\"bold\">{allTweet.username}</Text>\r\n                                    <Text>{allTweet.time}</Text>\r\n                                    <Text mt={2} mb={4}>{allTweet.tweet}</Text>\r\n                                    <Flex>\r\n                                        <Flex align=\"center\">\r\n                                            <Box>\r\n                                                {isLike(allTweet) ? (\r\n                                                        <FaThumbsUp size={18}/>\r\n                                                    ) : (\r\n                                                        <FaRegThumbsUp size={18} />\r\n                                                    )}\r\n                                            </Box>\r\n                                            <Text ml={2}>{allTweet.tweetLikeCount}</Text>\r\n                                        </Flex>\r\n                                        <Flex  align=\"center\" ml={8}>\r\n                                            <FaRegCommentAlt size={18}/>\r\n                                            <Text ml={2}>{allTweet.tweetCommentCount}</Text>\r\n                                        </Flex>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Flex>\r\n                        ))}\r\n                    </Stack>\r\n                </Box>\r\n            </Box>\r\n\r\n            <AllTweetModal\r\n                tweetId={tweetId}\r\n                allTweets={allTweets}\r\n                onClose={onClose}\r\n                isOpen={isOpen}\r\n                insertTweetLike={insertTweetLike}\r\n                deleteTweetLike={deleteTweetLike}\r\n                insertTweetComment={insertTweetComment}\r\n                insertFollow={insertFollow}\r\n                deleteFollow={deleteFollow}\r\n            />\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}