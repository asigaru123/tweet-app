{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\nimport { useMessage } from \"./useMessage\";\nexport const useDeleteTweet = () => {\n  _s();\n\n  const [deleteTweetState, setDeleteTweetState] = useState(false);\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n\n  const deleteTweet = tweetCount => {\n    setDeleteTweetState(true);\n    axios.delete(`http://localhost:8080/api/home/deleteTweet/${loginUser.email}/${tweetCount}`, {\n      headers: {\n        Authorization: loginUser.token\n      }\n    }).then(() => {\n      showMessage({\n        title: \"削除しました\",\n        status: \"success\"\n      });\n      setDeleteTweetState(false);\n    }).catch(() => {\n      showMessage({\n        title: \"削除に失敗しました\",\n        status: \"error\"\n      });\n      setDeleteTweetState(false);\n    });\n  };\n\n  return {\n    deleteTweetState,\n    deleteTweet\n  };\n};\n\n_s(useDeleteTweet, \"9xF0kSAPaG9FYrNIjeUdcIXp0gk=\", false, function () {\n  return [useMessage, useCurrentLoginUser];\n});","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/hooks/useDeleteTweet.tsx"],"names":["axios","useState","useCurrentLoginUser","useMessage","useDeleteTweet","deleteTweetState","setDeleteTweetState","showMessage","loginUser","deleteTweet","tweetCount","delete","email","headers","Authorization","token","then","title","status","catch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAACM,IAAAA;AAAD,MAAgBJ,UAAU,EAAhC;AACA,QAAM;AAACK,IAAAA;AAAD,MAAcN,mBAAmB,EAAvC;;AACA,QAAMO,WAAW,GAAIC,UAAD,IAAyB;AACzCJ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAN,IAAAA,KAAK,CAACW,MAAN,CAAc,8CAA6CH,SAAS,CAACI,KAAM,IAAGF,UAAW,EAAzF,EAA4F;AAACG,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEN,SAAS,CAACO;AAA1B;AAAV,KAA5F,EACCC,IADD,CACM,MAAM;AACRT,MAAAA,WAAW,CAAC;AAACU,QAAAA,KAAK,EAAE,QAAR;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAD,CAAX;AACAZ,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KAJD,EAKCa,KALD,CAKO,MAAM;AACTZ,MAAAA,WAAW,CAAC;AAACU,QAAAA,KAAK,EAAE,WAAR;AAAqBC,QAAAA,MAAM,EAAE;AAA7B,OAAD,CAAX;AACAZ,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KARD;AASH,GAXD;;AAaA,SAAO;AAACD,IAAAA,gBAAD;AAAmBI,IAAAA;AAAnB,GAAP;AACH,CAlBM;;GAAML,c;UAEaD,U,EACFD,mB","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useCurrentLoginUser } from \"./useCurrentLoginUser\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\nexport const useDeleteTweet = () => {\r\n    const [deleteTweetState, setDeleteTweetState] = useState(false);\r\n    const {showMessage} = useMessage();\r\n    const {loginUser} = useCurrentLoginUser();\r\n    const deleteTweet = (tweetCount?: Number) => {\r\n        setDeleteTweetState(true);\r\n        axios.delete(`http://localhost:8080/api/home/deleteTweet/${loginUser.email}/${tweetCount}`, {headers: {Authorization: loginUser.token as string}})\r\n        .then(() => {\r\n            showMessage({title: \"削除しました\", status: \"success\"});\r\n            setDeleteTweetState(false);\r\n        })\r\n        .catch(() => {\r\n            showMessage({title: \"削除に失敗しました\", status: \"error\"});\r\n            setDeleteTweetState(false);\r\n        });\r\n    };\r\n\r\n    return {deleteTweetState, deleteTweet};\r\n};"]},"metadata":{},"sourceType":"module"}