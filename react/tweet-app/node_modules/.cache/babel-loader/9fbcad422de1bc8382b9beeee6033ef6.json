{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\molecules\\\\AllTweetModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Box, Flex, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { Textarea } from \"@chakra-ui/textarea\";\nimport { useEffect, useState } from \"react\";\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AllTweetModal = props => {\n  _s();\n\n  var _targetTweet$tweetCom, _targetTweet$tweetCom2;\n\n  const {\n    tweetId,\n    allTweets,\n    onClose,\n    isOpen,\n    insertTweetLike,\n    deleteTweetLike,\n    insertTweetComment,\n    insertFollow,\n    deleteFollow\n  } = props;\n  const [targetTweet, setTargetTweet] = useState();\n  const [comment, setComment] = useState(\"\");\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n\n  const isLike = () => {\n    let isLikeFrag = false;\n\n    for (let i = 0; i < (targetTweet === null || targetTweet === void 0 ? void 0 : (_targetTweet$tweetLik = targetTweet.tweetLikeList) === null || _targetTweet$tweetLik === void 0 ? void 0 : _targetTweet$tweetLik.length); ++i) {\n      var _targetTweet$tweetLik;\n\n      if (loginUser.email === (targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweetLikeList[i])) {\n        isLikeFrag = true;\n        break;\n      }\n    }\n\n    ;\n    return isLikeFrag;\n  };\n\n  const onClickLike = () => {\n    if (isLike()) {\n      deleteTweetLike(tweetId);\n    } else {\n      insertTweetLike(tweetId);\n    }\n\n    ;\n  };\n\n  const onChangeTweetComment = event => setComment(event.target.value);\n\n  const onClickTweetComment = () => {\n    insertTweetComment(tweetId, comment);\n    setComment(\"\");\n  };\n\n  const onClickFollow = () => {\n    if (isFollow()) {\n      deleteFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email);\n    } else {\n      insertFollow(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email);\n    }\n  };\n\n  const isFollow = () => {\n    var _loginUser$follow;\n\n    let isFollowFrag = false;\n\n    if (((_loginUser$follow = loginUser.follow) === null || _loginUser$follow === void 0 ? void 0 : _loginUser$follow.length) !== undefined) {\n      for (let i = 0; i > loginUser.follow.length; ++i) {\n        if (loginUser.follow[0].followemail === (targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.email)) {\n          isFollowFrag = true;\n          break;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    return isFollowFrag;\n  };\n\n  const isProfileImage = image => {\n    let profileImageFrag = false;\n\n    if (image !== \"\") {\n      profileImageFrag = true;\n    }\n\n    ;\n    return profileImageFrag;\n  };\n\n  useEffect(() => {\n    const findTweet = allTweets.find(allTweet => tweetId === allTweet.id);\n    setTargetTweet(findTweet);\n  }, [allTweets, tweetId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mr: 2,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    boxSize: \"60px\",\n                    borderRadius: \"full\",\n                    src: isProfileImage(targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.profileImage) ? targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.profileImage : `${process.env.PUBLIC_URL}/user_icon.png`,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    fontWeight: \"bold\",\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    my: 3,\n                    children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), isFollow() ? /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  fontSize: \"xs\",\n                  backgroundColor: \"gray.400\",\n                  borderRadius: \"full\",\n                  _hover: {\n                    opacity: \"0.7\"\n                  },\n                  onClick: onClickFollow,\n                  children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  fontSize: \"xs\",\n                  backgroundColor: \"blue.300\",\n                  borderRadius: \"full\",\n                  _hover: {\n                    opacity: \"0.7\"\n                  },\n                  onClick: onClickFollow,\n                  children: \"\\u30D5\\u30A9\\u30ED\\u30FC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              ml: 4,\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                _hover: {\n                  cursor: \"pointer\"\n                },\n                onClick: onClickLike,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: isLike() ? /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  ml: 2,\n                  children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweetLikeCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                ml: 10,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(FaRegCommentAlt, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  ml: 2,\n                  children: targetTweet === null || targetTweet === void 0 ? void 0 : targetTweet.tweetCommentCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              align: \"end\",\n              my: 6,\n              children: [/*#__PURE__*/_jsxDEV(Textarea, {\n                borderColor: \"gray.300\",\n                placeholder: \"\\u30B3\\u30E1\\u30F3\\u30C8\\u3059\\u308B\",\n                value: comment,\n                onChange: onChangeTweetComment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                backgroundColor: \"gray.400\",\n                ml: 2,\n                _hover: {\n                  opacity: \"0.7\"\n                },\n                disabled: comment === \"\",\n                onClick: onClickTweetComment,\n                children: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), (targetTweet === null || targetTweet === void 0 ? void 0 : (_targetTweet$tweetCom = targetTweet.tweetCommentResource) === null || _targetTweet$tweetCom === void 0 ? void 0 : _targetTweet$tweetCom.length) === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 4,\n              mt: 10,\n              mb: 2,\n              children: targetTweet === null || targetTweet === void 0 ? void 0 : (_targetTweet$tweetCom2 = targetTweet.tweetCommentResource) === null || _targetTweet$tweetCom2 === void 0 ? void 0 : _targetTweet$tweetCom2.map(commentResource => /*#__PURE__*/_jsxDEV(Flex, {\n                p: 1,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    boxSize: \"40px\",\n                    borderRadius: \"full\",\n                    src: isProfileImage(commentResource.profileImage) ? commentResource.profileImage : `${process.env.PUBLIC_URL}/user_icon.png`,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"md\",\n                    fontWeight: \"bold\",\n                    children: commentResource.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    children: commentResource.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"md\",\n                    children: commentResource.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllTweetModal, \"KpLqolddaKrb040dAWV+10xz0Yw=\", false, function () {\n  return [useCurrentLoginUser];\n});\n\n_c = AllTweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTweetModal\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/molecules/AllTweetModal.tsx"],"names":["Button","Image","Box","Flex","Spacer","Stack","Text","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Textarea","useEffect","useState","useCurrentLoginUser","FaRegThumbsUp","FaThumbsUp","FaRegCommentAlt","AllTweetModal","props","tweetId","allTweets","onClose","isOpen","insertTweetLike","deleteTweetLike","insertTweetComment","insertFollow","deleteFollow","targetTweet","setTargetTweet","comment","setComment","loginUser","isLike","isLikeFrag","i","tweetLikeList","length","email","onClickLike","onChangeTweetComment","event","target","value","onClickTweetComment","onClickFollow","isFollow","isFollowFrag","follow","undefined","followemail","isProfileImage","image","profileImageFrag","findTweet","find","allTweet","id","profileImage","process","env","PUBLIC_URL","username","time","tweet","opacity","cursor","tweetLikeCount","tweetCommentCount","tweetCommentResource","map","commentResource"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Spacer, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { ChangeEvent, useEffect, useState, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\nimport { FaRegThumbsUp, FaThumbsUp, FaRegCommentAlt } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n    tweetId?: Number;\r\n    allTweets: Array<TweetType>;\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n    insertTweetLike: (tweetId?: Number) => void;\r\n    deleteTweetLike: (tweetId?: Number) => void;\r\n    insertTweetComment: (tweetId?: Number, comment?: string) => void;\r\n    insertFollow: (followemail?: string) => void;\r\n    deleteFollow: (followemail?: string) => void;\r\n};\r\n\r\nexport const AllTweetModal: VFC<Props> = (props) => {\r\n    const {tweetId, allTweets, onClose, isOpen, insertTweetLike, deleteTweetLike, insertTweetComment, insertFollow, deleteFollow} = props;\r\n    const [targetTweet, setTargetTweet] = useState<TweetType>();\r\n    const [comment, setComment] = useState(\"\");\r\n    const {loginUser} = useCurrentLoginUser();\r\n\r\n    const isLike = () => {\r\n        let isLikeFrag = false;\r\n        for(let i = 0; i < targetTweet?.tweetLikeList?.length!; ++ i){\r\n            if(loginUser.email === targetTweet?.tweetLikeList![i]){\r\n                isLikeFrag = true;\r\n                break;\r\n            }\r\n        };\r\n        return isLikeFrag;\r\n    };\r\n    const onClickLike = () => {\r\n        if(isLike()){\r\n            deleteTweetLike(tweetId);\r\n        }else{\r\n            insertTweetLike(tweetId);\r\n        };\r\n    };\r\n    const onChangeTweetComment = (event: ChangeEvent<HTMLTextAreaElement>) => setComment(event.target.value);\r\n    const onClickTweetComment = () => {\r\n        insertTweetComment(tweetId, comment);\r\n        setComment(\"\");\r\n    };\r\n\r\n    const onClickFollow = () => {\r\n        if(isFollow()){\r\n            deleteFollow(targetTweet?.email);\r\n        }else{\r\n            insertFollow(targetTweet?.email);\r\n        }\r\n    };\r\n    const isFollow = () => {\r\n        let isFollowFrag = false;\r\n        if(loginUser.follow?.length !== undefined){\r\n            for(let i=0; i > loginUser.follow!.length; ++i){\r\n                if(loginUser.follow![0].followemail === targetTweet?.email){\r\n                    isFollowFrag = true;\r\n                    break;\r\n                };\r\n            };\r\n        }\r\n        return isFollowFrag;\r\n    };\r\n\r\n    const isProfileImage = (image?: string) =>{\r\n        let profileImageFrag = false;\r\n        if(image !== \"\"){\r\n            profileImageFrag = true;\r\n        };\r\n        return profileImageFrag\r\n    };\r\n\r\n    useEffect(() => {\r\n        const findTweet = allTweets.find((allTweet) => tweetId === allTweet.id);\r\n        setTargetTweet(findTweet);\r\n    }, [allTweets, tweetId]);\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>Tweet</ModalHeader>\r\n                    <ModalBody>\r\n                        <Box>\r\n                            <Flex>\r\n                                <Flex>\r\n                                    <Box mr={2}>\r\n                                        <Image boxSize=\"60px\" borderRadius=\"full\"\r\n                                        src={isProfileImage(targetTweet?.profileImage) ? (\r\n                                            targetTweet?.profileImage\r\n                                        ) : (\r\n                                            `${process.env.PUBLIC_URL}/user_icon.png`\r\n                                        )}\r\n                                        alt=\"\"/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <Text fontSize=\"lg\" fontWeight=\"bold\">{targetTweet?.username}</Text>\r\n                                        <Text fontSize=\"sm\">{targetTweet?.time}</Text>\r\n                                        <Text fontSize=\"lg\" my={3}>{targetTweet?.tweet}</Text>\r\n                                    </Box>\r\n                                </Flex>\r\n                                <Spacer />\r\n                                {isFollow() ? (\r\n                                    <Box>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            fontSize=\"xs\"\r\n                                            backgroundColor=\"gray.400\"\r\n                                            borderRadius=\"full\"\r\n                                            _hover={{opacity: \"0.7\"}}\r\n                                            onClick={onClickFollow}\r\n                                        >\r\n                                            フォロー中\r\n                                        </Button>\r\n                                    </Box>\r\n                                ) : (\r\n                                    <Box>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            fontSize=\"xs\"\r\n                                            backgroundColor=\"blue.300\"\r\n                                            borderRadius=\"full\"\r\n                                            _hover={{opacity: \"0.7\"}}\r\n                                            onClick={onClickFollow}\r\n                                        >\r\n                                            フォロー\r\n                                        </Button>\r\n                                    </Box>\r\n                                )}\r\n                            </Flex>\r\n                            <Flex ml={4}>\r\n                                <Flex align=\"center\" _hover={{cursor: \"pointer\"}} onClick={onClickLike}>\r\n                                    <Box>\r\n                                        {isLike() ? (\r\n                                            <FaThumbsUp size={16}/>\r\n                                        ) : (\r\n                                            <FaRegThumbsUp size={16} />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Text ml={2}>{targetTweet?.tweetLikeCount}</Text>\r\n                                </Flex>\r\n                                <Flex align=\"center\" ml={10}>\r\n                                    <Box>\r\n                                        <FaRegCommentAlt size={16}/>\r\n                                    </Box>\r\n                                    <Text ml={2}>{targetTweet?.tweetCommentCount}</Text>\r\n                                </Flex>\r\n                            </Flex>\r\n                            <Flex align=\"end\" my={6}>\r\n                                <Textarea borderColor=\"gray.300\" placeholder=\"コメントする\" value={comment} onChange={onChangeTweetComment}/>\r\n                                <Button backgroundColor=\"gray.400\" ml={2} _hover={{opacity: \"0.7\"}} disabled={comment === \"\"} onClick={onClickTweetComment}>コメント</Button>\r\n                            </Flex>\r\n                            {targetTweet?.tweetCommentResource?.length === 0 ? (\r\n                                <>\r\n                                </>\r\n                            ) : (\r\n                                <Stack spacing={4} mt={10} mb={2}>\r\n                                {targetTweet?.tweetCommentResource?.map((commentResource) => (\r\n                                    <Flex p={1}>\r\n                                        <Box>\r\n                                            <Image boxSize=\"40px\" borderRadius=\"full\"\r\n                                            src={isProfileImage(commentResource.profileImage) ? (\r\n                                                commentResource.profileImage\r\n                                            ) : (\r\n                                                `${process.env.PUBLIC_URL}/user_icon.png`\r\n                                            )}\r\n                                            alt=\"\"/>\r\n                                        </Box>\r\n                                        <Box ml={2}>\r\n                                            <Text fontSize=\"md\" fontWeight=\"bold\">{commentResource.username}</Text>\r\n                                            <Text fontSize=\"xs\">{commentResource.time}</Text>\r\n                                            <Text fontSize=\"md\">{commentResource.comment}</Text>\r\n                                        </Box>\r\n                                    </Flex>\r\n                                ))}\r\n                                </Stack>\r\n                            )}\r\n                        </Box>\r\n                    </ModalBody>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}