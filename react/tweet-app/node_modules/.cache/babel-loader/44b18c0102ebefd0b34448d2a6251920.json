{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\molecules\\\\ImageUploadModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Input } from \"@chakra-ui/input\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageUploadModal = props => {\n  _s();\n\n  const {\n    onClose,\n    isOpen\n  } = props;\n  const [file, setFile] = useState();\n\n  const getBase64 = file => {\n    return new Promise(resolve => {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        let baseURL = reader.result;\n        setFile(baseURL);\n        resolve(baseURL);\n      };\n    });\n  };\n\n  const handleFileInputChange = event => {\n    let file = event.target.files[0];\n    getBase64(file);\n    console.log(\"file:\");\n    console.log(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"\\u753B\\u50CF\\u3092\\u5909\\u66F4\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageUploadModal, \"r2TYF+Fv8c2PpNlLvKTx2zIPeds=\");\n\n_c = ImageUploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/molecules/ImageUploadModal.tsx"],"names":["Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","useState","ImageUploadModal","props","onClose","isOpen","file","setFile","getBase64","Promise","resolve","reader","FileReader","readAsDataURL","onload","baseURL","result","handleFileInputChange","event","target","files","console","log"],"mappings":";;;AAEA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,gBAA3B,EAA6CC,YAA7C,EAA2DC,WAA3D,EAAwEC,YAAxE,QAA4F,kBAA5F;AACA,SAA8BC,QAA9B,QAAmD,OAAnD;;AAQA,OAAO,MAAMC,gBAA4B,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAoBF,KAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;;AAEA,QAAMO,SAAS,GAAIF,IAAD,IAAgB;AAC9B,WAAO,IAAIG,OAAJ,CAAYC,OAAO,IAAI;AAC1B,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBP,IAArB;;AACAK,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AAClB,YAAIC,OAAO,GAAGJ,MAAM,CAACK,MAArB;AACAT,QAAAA,OAAO,CAACQ,OAAD,CAAP;AACAL,QAAAA,OAAO,CAACK,OAAD,CAAP;AACH,OAJD;AAKH,KARM,CAAP;AASH,GAVD;;AAYA,QAAME,qBAAqB,GAAIC,KAAD,IAA0C;AACpE,QAAIZ,IAAI,GAAGY,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAoB,CAApB,CAAX;AACAZ,IAAAA,SAAS,CAACF,IAAD,CAAT;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACH,GALD;;AAOA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEF,OAAhB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAA,2BACI,QAAC,YAAD;AAAA,6BACI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAC,SAA1B;AAAoC,YAAA,QAAQ,EAAEY;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApCM;;GAAMf,gB;;KAAAA,gB","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\r\nimport { ChangeEvent, useRef, useState, VFC } from \"react\";\r\nimport { useChangeImage } from \"../../hooks/useChangeImage\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n};\r\n\r\nexport const ImageUploadModal: VFC<Props> = (props) => {\r\n    const {onClose, isOpen} = props;\r\n    const [file, setFile] = useState<string>();\r\n\r\n    const getBase64 = (file: File) => {\r\n        return new Promise(resolve => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                let baseURL = reader.result as string;\r\n                setFile(baseURL);\r\n                resolve(baseURL);\r\n            };\r\n        })\r\n    }\r\n    \r\n    const handleFileInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let file = event.target.files![0];\r\n        getBase64(file);\r\n        console.log(\"file:\");\r\n        console.log(file);\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>画像を変更する</ModalHeader>\r\n                    <ModalBody>\r\n                        <Input type=\"file\" accept=\"image/*\" onChange={handleFileInputChange} />\r\n                    </ModalBody>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}