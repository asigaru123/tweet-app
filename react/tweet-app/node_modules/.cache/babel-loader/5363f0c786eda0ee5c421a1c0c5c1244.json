{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\pages\\\\Tweet.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Heading } from \"@chakra-ui/layout\";\nimport { useEffect } from \"react\";\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\nimport { useGetAllTweets } from \"../../hooks/useGetAllTweets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Tweet = () => {\n  _s();\n\n  const {\n    getAllTweetsState,\n    allTweets,\n    getAllTweets\n  } = useGetAllTweets();\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n\n  const isMyTweet = allTweet => {\n    let isMyTweet = false;\n\n    if (loginUser.email === (allTweet === null || allTweet === void 0 ? void 0 : allTweet.email)) {\n      isMyTweet = true;\n    }\n\n    return isMyTweet;\n  };\n\n  useEffect(() => {\n    getAllTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"teal.400\",\n      display: {\n        base: \"none\",\n        sm: \"block\"\n      },\n      ml: 60,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        ml: 2,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"3xl\",\n          p: 2,\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tweet, \"0aEqfxGMH+JH4UT6wqDb/t6tkmA=\", false, function () {\n  return [useGetAllTweets, useCurrentLoginUser];\n});\n\n_c = Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/pages/Tweet.tsx"],"names":["Box","Heading","useEffect","useCurrentLoginUser","useGetAllTweets","Tweet","getAllTweetsState","allTweets","getAllTweets","loginUser","isMyTweet","allTweet","email","base","sm"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,mBAA7B;AACA,SAASC,SAAT,QAA+B,OAA/B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAGA,OAAO,MAAMC,KAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAA+CJ,eAAe,EAApE;AACA,QAAM;AAACK,IAAAA;AAAD,MAAcN,mBAAmB,EAAvC;;AAEA,QAAMO,SAAS,GAAIC,QAAD,IAA0B;AACxC,QAAID,SAAS,GAAG,KAAhB;;AACA,QAAGD,SAAS,CAACG,KAAV,MAAoBD,QAApB,aAAoBA,QAApB,uBAAoBA,QAAQ,CAAEC,KAA9B,CAAH,EAAuC;AACnCF,MAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,WAAOA,SAAP;AACH,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,eAAe,EAAC,UAArB;AAAgC,MAAA,OAAO,EAAE;AAACK,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAAzC;AAAsE,MAAA,EAAE,EAAE,EAA1E;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC,KAAlB;AAAwB,UAAA,CAAC,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CA1BM;;GAAMT,K;UAC4CD,e,EACjCD,mB;;;KAFXE,K","sourcesContent":["import { Box, Heading } from \"@chakra-ui/layout\";\r\nimport { useEffect, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { useGetAllTweets } from \"../../hooks/useGetAllTweets\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\n\r\nexport const Tweet: VFC = () => {\r\n    const {getAllTweetsState, allTweets, getAllTweets} = useGetAllTweets();\r\n    const {loginUser} = useCurrentLoginUser();\r\n\r\n    const isMyTweet = (allTweet?: TweetType) => {\r\n        let isMyTweet = false;\r\n        if(loginUser.email === allTweet?.email){\r\n            isMyTweet = true;\r\n        }\r\n        return isMyTweet;\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllTweets();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Box backgroundColor=\"teal.400\" display={{base: \"none\", sm: \"block\"}} ml={60}>\r\n                <Box ml={2}>\r\n                    <Heading fontSize=\"3xl\" p={2}>Tweet</Heading>\r\n                </Box>\r\n                <Box></Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}