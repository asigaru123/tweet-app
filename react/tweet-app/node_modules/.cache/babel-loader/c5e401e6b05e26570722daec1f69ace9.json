{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuma\\\\Desktop\\\\\\u30D5\\u30ED\\u30F3\\u30C8\\\\tweet-app\\\\src\\\\components\\\\atoms\\\\LikeButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { memo } from \"react\";\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\nimport { FaRegThumbsUp, FaThumbsUp } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LikeButton = /*#__PURE__*/memo(_c = _s(props => {\n  var _tweet$tweetLikeList;\n\n  _s();\n\n  const {\n    size,\n    tweet\n  } = props;\n  const {\n    loginUser\n  } = useCurrentLoginUser();\n  let isLikeFrag = false;\n\n  if ((tweet === null || tweet === void 0 ? void 0 : (_tweet$tweetLikeList = tweet.tweetLikeList) === null || _tweet$tweetLikeList === void 0 ? void 0 : _tweet$tweetLikeList.length) !== undefined) {\n    for (let i = 0; i < tweet.tweetLikeList.length; ++i) {\n      if (loginUser.email === tweet.tweetLikeList[i]) {\n        isLikeFrag = true;\n        break;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n  console.log(\"*****-----\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLikeFrag ? /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}, \"b+k38yjsSU3BfqQ8jVBhTK3eCR0=\", false, function () {\n  return [useCurrentLoginUser];\n}));\n_c2 = LikeButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LikeButton$memo\");\n$RefreshReg$(_c2, \"LikeButton\");","map":{"version":3,"sources":["C:/Users/yuma/Desktop/フロント/tweet-app/src/components/atoms/LikeButton.tsx"],"names":["memo","useCurrentLoginUser","FaRegThumbsUp","FaThumbsUp","LikeButton","props","size","tweet","loginUser","isLikeFrag","tweetLikeList","length","undefined","i","email","console","log"],"mappings":";;;AAAA,SAASA,IAAT,QAA0B,OAA1B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,gBAA1C;;;AAOA,OAAO,MAAMC,UAAsB,gBAAGJ,IAAI,SAAEK,KAAD,IAAW;AAAA;;AAAA;;AAClD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBF,KAAtB;AACA,QAAM;AAACG,IAAAA;AAAD,MAAcP,mBAAmB,EAAvC;AAEA,MAAIQ,UAAU,GAAG,KAAjB;;AACA,MAAG,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,oCAAAA,KAAK,CAAEG,aAAP,8EAAsBC,MAAtB,MAAiCC,SAApC,EAA8C;AAC1C,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGN,KAAK,CAACG,aAAN,CAAoBC,MAArC,EAA6C,EAAEE,CAA/C,EAAiD;AAC7C,UAAGL,SAAS,CAACM,KAAV,KAAoBP,KAAK,CAACG,aAAN,CAAoBG,CAApB,CAAvB,EAA8C;AAC1CJ,QAAAA,UAAU,GAAG,IAAb;AACA;AACH;;AAAA;AACJ;;AAAA;AACJ;;AAAA;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,sBACI;AAAA,cACKP,UAAU,gBACP,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AAJR,mBADJ;AASH,CAxByC;AAAA,UAElBL,mBAFkB;AAAA,GAAnC;MAAMG,U","sourcesContent":["import { memo, VFC } from \"react\";\r\nimport { useCurrentLoginUser } from \"../../hooks/useCurrentLoginUser\";\r\nimport { TweetType } from \"../../types/tweetType\";\r\nimport { FaRegThumbsUp, FaThumbsUp } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n    size: number;\r\n    tweet: TweetType;\r\n};\r\n\r\nexport const LikeButton: VFC<Props> = memo((props) => {\r\n    const {size, tweet} = props;\r\n    const {loginUser} = useCurrentLoginUser();\r\n\r\n    let isLikeFrag = false;\r\n    if(tweet?.tweetLikeList?.length !== undefined){\r\n        for(let i=0; i < tweet.tweetLikeList.length; ++i){\r\n            if(loginUser.email === tweet.tweetLikeList[i]){\r\n                isLikeFrag = true;\r\n                break;\r\n            };\r\n        };\r\n    };\r\n    console.log(\"*****-----\");\r\n\r\n    return (\r\n        <>\r\n            {isLikeFrag ? (\r\n                <FaThumbsUp size={size}/>\r\n            ) : (\r\n                <FaRegThumbsUp size={size} />\r\n            )}\r\n        </>\r\n    );\r\n});"]},"metadata":{},"sourceType":"module"}